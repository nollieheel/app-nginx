# Generated by Chef
#

<% ## @upstreams = Array of hashes -%>
<% ##              Example hash element: -%>
<% ## { -%>
<% ##   :name => 'string', -%>
<% ##   :servers => [ -%>
<% ##     '127.0.0.1:9000', -%>
<% ##     'unix:/var/run/php-fpm.sock' -%>
<% ##   ] -%>
<% ## } -%>
<% ## -%>
<% ( @upstreams || [] ).each do |us| -%>
upstream <%= us[:name] %> {
<%     us[:servers].each do |serv| -%>
    server <%= serv %>;
<%     end -%>
}

<% end -%>
<% ## @listen_options = Array of string options -%>
<% ## @server_name = Can be space separated string of server names -%>
<% lopts = ['ssl'] + ( @listen_options || [] ) -%>
server {
    listen 80;
    server_name <%= @server_name %>;
    return 301 https://$server_name$request_uri;
}

server {
    listen <%= @port || 443 %> <%= lopts.join(' ') %>;

    ssl_certificate <%= @ssl[:certificate] %>;
    ssl_certificate_key <%= @ssl[:certificate_key] %>;
<% if @ssl[:cipher_suite] == 'modern' -%>

    # Modern cipher suite:
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK;
<% else -%>

    # Medium compatibility cipher suite (compatible with IE7 WinXP):
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA;
<% end -%>
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_cache shared:SSL:10m;
    ssl_dhparam <%= @ssl[:dhparam] %>;

<% ## @add_headers = Hash of additional headers to be included -%>
<% ##                Defaults shown below: -%>
<% aheaders = @add_headers || { -%>
<% #  'Strict-Transport-Security' => '"max-age=15758000;includeSubDomains"', -%>
<%   'Strict-Transport-Security'         => '"max-age=15758000;"', -%>
<%   'X-Frame-Options'                   => 'SAMEORIGIN', -%>
<%   'X-Content-Type-Options'            => 'nosniff', -%>
<%   'X-XSS-Protection'                  => '"1; mode=block"', -%>
<%   'X-Permitted-Cross-Domain-Policies' => 'none' -%>
<% } -%>
<% aheaders.each do |header, value| -%>
    add_header <%= header %> <%= value %>;
<% end -%>

    # Add CSP headers here:
    # [https://www.owasp.org/index.php/Content_Security_Policy]
    # [http://www.html5rocks.com/en/tutorials/security/content-security-policy/]
    #
    #add_header Content-Security-Policy "default-src 'self'";
    #add_header X-Content-Security-Policy "default-src 'self'";

    server_name <%= @server_name %>;
<% if @doc_root -%>
    root <%= @doc_root %>;
<% end -%>
<% if @index -%>
    index <%= @index %>;
<% end -%>

<% if @auth -%>
    auth_basic "<%= @auth[:msg] %>";
    auth_basic_user_file <%= @auth[:user_file_path] %>;

<% end -%>
<% ## @access_log_options = Array of strings -%>
<% main_name = @server_name.split(' ')[0] -%>
<% alopts = @access_log_options ? " #{@access_log_options.join(' ')}" : '' -%>
<% logdir = @log_dir || node['nginx']['log_dir'] -%>
    access_log <%= logdir %>/<%= main_name %>.access.log<%= alopts %>;
    error_log <%= logdir %>/<%= main_name %>.error.log;

<% ## @nolog_locations = Array of location names that are not to logged -%>
<% ##                    if accessed. Defaults below: -%>
<% ( @nolog_locations || ['= /favicon.ico', '= /robots.txt'] ).each do |loc| -%>
    location <%= loc %> {
        log_not_found off;
        access_log off;
    }

<% end -%>
<% ## @deny_locations = Array of location names to be set to 'deny all' -%>
<% ##                   Defaults below: -%>
<% ( @deny_locations || ['~ (^|/)\.'] ).each do |loc| -%>
    location <%= loc %> {
        deny all;
        log_not_found off;
        access_log off;
    }

<% end -%>
<% ## @handle_static_files = Array of file extensions that will be -%>
<% ##                        silently handled by Nginx -%>
<% ##                        Set to boolean false to disable. -%>
<% unless @handle_static_files == false -%>
<%   static_files = @handle_static_files || [ -%>
<%     'js',   'css', 'ogg', 'ogv', 'svg',  'svgz', 'eot', 'otf', -%>
<%     'woff', 'mp4', 'ttf', 'rss', 'atom', 'jpg',  'jpeg', 'gif', -%>
<%     'png',  'ico', 'zip', 'tgz', 'gz',   'rar',  'bz2', 'doc', -%>
<%     'exe',  'ppt', 'tar', 'mid', 'midi', 'wav',  'bmp', 'rtf', 'xls' -%>
<%   ] -%>
    location ~* ^/.+\.(<%= static_files.join('|') %>)$ {
        expires max;
        log_not_found off;
        access_log off;
    }

<% end -%>
<% ## @server_statements_1 = Additional server statements to be included -%>
<% ( @server_statements_1 || [] ).each do |statement| -%>
    <%= statement %>
<% end -%>
<% ## =========== -%>
<% ## Example config for a basic PHP site: -%>
<% ## -%>
    location ~ ^/.+\.php(/|$) {
        try_files $uri =404;

        # No need to enable this if PHP and Nginx share the same filesystem
        #fastcgi_index index.php;

        # Enable if implementing custom error pages
        #fastcgi_intercept_errors on;

        # You should have "cgi.fix_pathinfo = 0;" in php.ini
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        # https://www.nginx.com/blog/mitigating-the-httpoxy-vulnerability-with-nginx/
        fastcgi_param HTTP_PROXY "";
<% if @upstreams -%>

        fastcgi_pass <%= @upstreams[0][:name] %>;
<% end -%>
    }

    location ~ ^/ {
<% str = @index ? "/#{@index}?$args" : '=404' -%>
        try_files $uri $uri/ <%= str %>;
    }
<% ## =========== -%>

<% ## @server_statements_2 = Additional server statements to be included -%>
<% ( @server_statements_2 || [] ).each do |statement| -%>
    <%= statement %>
<% end -%>
}

<% ## @http_statements = Additional http statements to be included -%>
<% ( @http_statements || [] ).each do |statement| -%>
<%= statement %>
<% end -%>
